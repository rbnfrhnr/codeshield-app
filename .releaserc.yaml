branches:
  - main
  - staging:
      prerelease: rc
      channel: rc

plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - 
    path: "@semantic-release/exec"
    successCmd: |
      echo "Preparing version for release: {{nextRelease.version}}"

      # Update __version__.py with release version (including -rc if present)
      if [ "$CHANNEL" = "rc" ]; then
        echo "__version__ = '{{nextRelease.version}}-rc'" > codeshieldapp/__version__.py
      else
        echo "__version__ = '{{nextRelease.version}}'" > codeshieldapp/__version__.py
      fi

      # Update pyproject.toml version
      if [ "$CHANNEL" = "rc" ]; then
        sed -i "s/^version = .*/version = \"{{nextRelease.version}}-rc\"/" pyproject.toml
      else
        sed -i "s/^version = .*/version = \"{{nextRelease.version}}\"/" pyproject.toml
      fi

  - 
    path: "@semantic-release/git"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
    message: "chore(release): {{nextRelease.version}} [skip ci]\n\n{{nextRelease.notes}}"

  - 
    path: "@semantic-release/github"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
      - "build/*.whl"
    releaseName: "{{nextRelease.version}}"
    prerelease: true