branches:
  - main
  - staging:
      prerelease: rc
      channel: rc

plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - 
    path: "@semantic-release/exec"
    prepareCmd: |
      bash -c '
        VERSION="{{nextRelease.version}}"
        CHANNEL="{{nextRelease.channel}}"

        echo "Preparing version for release: $CHANNEL"

        # Set version string with "-rc" if on staging
        if [ "$CHANNEL" = "rc" ]; then
          VERSION="${VERSION}-rc"
        fi

        echo "Final version to write: $VERSION"

        # Write version to __version__.py
        echo "__version__ = \"$VERSION\"" > codeshieldapp/__version__.py

        # Update pyproject.toml version
        sed -i "s/^version = .*/version = \"$VERSION\"/" pyproject.toml
      '
    path: "@semantic-release/git"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
    message: "chore(release): {{nextRelease.version}} [skip ci]\n\n{{nextRelease.notes}}"

  - 
    path: "@semantic-release/github"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
      - "build/*.whl"
    releaseName: "{{nextRelease.version}}"
    prerelease: true