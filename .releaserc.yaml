branches:
  - main
  - name: staging
    prerelease: rc
    channel: rc

plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"

  - 
    path: "@semantic-release/exec"
    prepareCmd: |
      echo "channel is ${nextRelease.channel}"
      if [ "{{nextRelease.channel}}" = "rc" ] || echo "{{nextRelease.version}}" | grep -q -- "-rc"; then
        echo '__version__ = "${nextRelease.version}-rc"' > codeshieldapp/__version__.py
        sed -i 's/^version = .*/version = "${nextRelease.version}-rc"/' pyproject.toml
      else
        echo '__version__ = "${nextRelease.version}"' > codeshieldapp/__version__.py
        sed -i 's/^version = .*/version = "${nextRelease.version}"/' pyproject.toml
      fi
  - 
    path: "@semantic-release/git"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
    message: |
      chore(release): ${nextRelease.version} [skip ci]

      ${nextRelease.notes}

  - 
    path: "@semantic-release/github"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
      - "build/*.whl"
    releaseName: ${nextRelease.version}
    prerelease: true
