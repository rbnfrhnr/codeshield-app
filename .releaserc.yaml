branches:
  - main
  - staging:
      prerelease: rc
      channel: rc

plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - 
    path: "@semantic-release/exec"
    prepareCmd: >
      bash -c '
        VERSION="{{nextRelease.version}}";
        CHANNEL="{{nextRelease.channel}}";
        if [ "$CHANNEL" = "rc" ]; then
          VERSION="${VERSION}-rc";
        fi;
        echo "Setting version to $VERSION";
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" codeshieldapp/__version__.py;
        sed -i "s/^version = \".*\"/version = \"$VERSION\"/" pyproject.toml;
        poetry lock --no-update;
        poetry version $VERSION;
      '
  - 
    path: "@semantic-release/git"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
    message: "chore(release): {{nextRelease.version}} [skip ci]\n\n{{nextRelease.notes}}"

  - 
    path: "@semantic-release/github"
    assets:
      - "CHANGELOG.md"
      - "pyproject.toml"
      - "codeshieldapp/__version__.py"
    releaseName: "{{nextRelease.version}}"
    prerelease: "{{nextRelease.channel}}" == "rc"
